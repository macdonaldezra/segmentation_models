Bootstrap: docker
From: nvidia/cuda:11.2.2-base


# Environment variables that will be set during runtime
%environment
    export POETRY_HOME="/opt/poetry"
    export VIRTUAL_ENV=/opt/venv
    export PATH="${VIRTUAL_ENV}/bin:${POETRY_HOME}/bin:$PATH"
    export LANG=C.UTF-8
    export PATH="/usr/local/bin:$PATH"

# Copy over files from host to container
%files
    poetry.lock /code/
    pyproject.toml /code/
    segmentation /code/


# Install Poetry and Python dependencies
%post
    # hacky workaround to deal with invalid GPG keys for the NVIDIA repository...
    # solution found here: https://github.com/NVIDIA/nvidia-docker/issues/1632
    rm /etc/apt/sources.list.d/cuda.list
    rm /etc/apt/sources.list.d/nvidia-ml.list

    apt-get update && apt-get install -yqq \
        python3.8 \
        python3-pip \
        python3.8-venv \
        # software-properties-common \
        wget
    # add-apt-repository universe
    # apt-get update && apt-get install -yqq \

    # Delete cached files we no longer need
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    echo "alias python=python3" >> ~/.bashrc && alias python=python3

    # Install Poetry
    GET_POETRY="https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py"
    export POETRY_HOME="/opt/poetry"
    export VIRTUAL_ENV=/opt/venv
    
    mkdir -p $POETRY_HOME
    wget --output-document ${POETRY_HOME}/get-poetry.py https://install.python-poetry.org
    python ${POETRY_HOME}/get-poetry.py --yes
    rm ${POETRY_HOME}/get-poetry.py

    # Create virtual environment and install dependencies
    cd /code
    python -m venv ${VIRTUAL_ENV}
    export PATH="${VIRTUAL_ENV}/bin:${POETRY_HOME}/bin:$PATH"
    poetry install --no-dev

# Executed commands once container is started
%runscript
    cd /code/
    python -m segmentation.train.attention_unet.py
